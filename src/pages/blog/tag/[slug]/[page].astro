---
import BaseHead from '@/components/BaseHead.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import Card from '@/components/Card.astro';
import {SITE_TITLE, SITE_DESCRIPTION, GLOBAL_STYLE} from '@/consts';
import { getPostsByTagPaginated, getAllTags, POSTS_PER_PAGE } from '@/lib/posts';
import UnifiedPostCard from "@/components/UnifiedPostCard.astro";
import Pagination from "@/components/Pagination.astro";

export async function getStaticPaths() {
  const tags = await getAllTags();
  const paths = [];
  
  for (const tag of tags) {
    // 各タグの総ページ数を取得
    const firstPagePosts = await getPostsByTagPaginated(tag.slug, { 
      page: 1, 
      perPage: POSTS_PER_PAGE 
    });
    const totalPages = firstPagePosts.totalPages;
    
    // 2ページ目以降のパスを生成
    for (let page = 2; page <= totalPages; page++) {
      paths.push({
        params: { 
          slug: tag.slug,
          page: page.toString()
        },
        props: { tag, page },
      });
    }
  }
  
  return paths;
}

interface Props {
  tag: {
    id: string;
    name: string;
    slug: string;
  };
  page: number;
}

const { tag, page } = Astro.props;
const paginatedPosts = await getPostsByTagPaginated(tag.slug, { 
  page, 
  perPage: POSTS_PER_PAGE 
});
---

<!doctype html>
<html lang="ja">
<head>
    <BaseHead title={`#${tag.name} - ページ ${page} | ${SITE_TITLE}`} description={`${tag.name}タグの記事一覧`}/>
</head>
<body>
<Header/>
<main>
    <Card variant={GLOBAL_STYLE}>
        <h1 class="emphasize">タグ: #{tag.name}</h1>
        <p>{paginatedPosts.totalItems}件の記事があります</p>
    </Card>
    <section>
        {
            paginatedPosts.data.map((post) => (
                    <UnifiedPostCard {...post}/>
            ))
        }
    </section>
    <Pagination 
        currentPage={paginatedPosts.currentPage}
        totalPages={paginatedPosts.totalPages}
        baseUrl={`/blog/tag/${tag.slug}`}
    />
</main>
<Footer/>
</body>
</html>

<style>
    main {
        max-width: 90rem;
        margin: 3rem auto;
        padding: 0 1rem;
    }

    main > * {
        margin-bottom: 2rem;
    }

    section {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1rem;
    }
</style>