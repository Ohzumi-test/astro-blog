---
import BaseHead from '@/components/BaseHead.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import Card from '@/components/Card.astro';
import {SITE_TITLE, SITE_DESCRIPTION, GLOBAL_STYLE} from '@/consts';
import { getPostsByTagPaginated, getAllTags, POSTS_PER_PAGE } from '@/lib/posts';
import UnifiedPostCard from "@/components/UnifiedPostCard.astro";
import Pagination from "@/components/Pagination.astro";

export async function getStaticPaths() {
  const tags = await getAllTags();
  return tags.map((tag) => ({
    params: { slug: tag.slug },
    props: { tag },
  }));
}

interface Props {
  tag: {
    id: string;
    name: string;
    slug: string;
  };
}

const { tag } = Astro.props;
const currentPage = 1;
const paginatedPosts = await getPostsByTagPaginated(tag.slug, { 
  page: currentPage, 
  perPage: POSTS_PER_PAGE 
});
---

<!doctype html>
<html lang="ja">
<head>
    <BaseHead title={`#${tag.name} - ${SITE_TITLE}`} description={`${tag.name}タグの記事一覧`}/>
</head>
<body>
<Header/>
<main>
    <Card variant={GLOBAL_STYLE}>
        <h1 class="emphasize">タグ: #{tag.name}</h1>
        <p>{paginatedPosts.totalItems}件の記事があります</p>
    </Card>
    <section>
        {
            paginatedPosts.data.map((post) => (
                    <UnifiedPostCard {...post}/>
            ))
        }
    </section>
    <Pagination 
        currentPage={paginatedPosts.currentPage}
        totalPages={paginatedPosts.totalPages}
        baseUrl={`/blog/tag/${tag.slug}`}
    />
</main>
<Footer/>
</body>
</html>

<style>
    main {
        max-width: 90rem;
        margin: 3rem auto;
        padding: 0 1rem;
    }

    main > * {
        margin-bottom: 2rem;
    }

    section {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1rem;
    }
</style>